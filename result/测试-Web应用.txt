[
 {
  "A_CONTENT": "在软件测试阶段，测试步骤按次序可以划分为以下几步（ ）", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:单元测试、集成测试、系统测试、验收测试", 
   "B:验收测试、单元测试、系统测试、集成测试", 
   "C:单元测试、集成测试、验收测试、系统测试", 
   "D:系统测试、单元测试、集成测试、验收测试"
  ]
 }, 
 {
  "A_CONTENT": "软件测试结束的标志是", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:A、使用了特定的测试用例", 
   "B:B、错误强度曲线下降到了预定的水平", 
   "C:C、查出了预定数目的缺陷", 
   "D:D、按照测试计划中所规定的时间进行了测试"
  ]
 }, 
 {
  "A_CONTENT": "软件需求规格说明的内容不应包括（ ）", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:主要功能", 
   "B:算法的详细描述", 
   "C:用户界面及运行环境", 
   "D:软件的性能"
  ]
 }, 
 {
  "A_CONTENT": "对“功能测试的回归测试经常要多次重复”的正确理解是", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:A、回归测试应该执行初测时所用的全部测试用例", 
   "B:B、回归测试只要执行发现缺陷的那些测试用例即可", 
   "C:C、通过多次的回归测试可以发现所有缺陷", 
   "D:D、回归测试就是验收测试"
  ]
 }, 
 {
  "A_CONTENT": "单元测试是对程序设计进行验证，下面哪个不是单元测试的主要内容", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:A、模块接口测试", 
   "B:B、有效性测试", 
   "C:C、路径测试", 
   "D:D、边界测试"
  ]
 }, 
 {
  "A_CONTENT": "以下不属于黑盒测试方法的是", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:A、等价类划分", 
   "B:B、边界值分析", 
   "C:C、因果图", 
   "D:D、静态分析"
  ]
 }, 
 {
  "A_CONTENT": "（ ）可以作为软件测试结束的标志", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:使用了特定的测试用例", 
   "B:错误强度曲线下降到预定的水平", 
   "C:查出了预定数目的错误", 
   "D:按照测试计划中所规定的时间进行了测试"
  ]
 }, 
 {
  "A_CONTENT": "软件测试按照开发阶段可以分为", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:A、黑盒测试、白盒测试", 
   "B:B、功能测试、性能测试", 
   "C:C、单元测试、集成测试、系统测试", 
   "D:D、动态测试和静态测试"
  ]
 }, 
 {
  "A_CONTENT": "单元测试主要的测试技术不包括（）", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:白盒测试", 
   "B:功能测试", 
   "C:静态测试", 
   "D:以上都不是"
  ]
 }, 
 {
  "A_CONTENT": "下列关于软件可靠性测试的说法中，错误的是（ ）", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:发现软件缺陷是软件可靠性测试的主要目的", 
   "B:软件可靠性测试通常用于有可靠性要求的软件", 
   "C:在一次软件可靠性测试中，执行的测试用例必须完全符合所有定义的软件运行剖面", 
   "D:可靠性测试通常要对测试结果进行分析才能获得测试结论"
  ]
 }, 
 {
  "A_CONTENT": "软件测试是软件质量保证的重要手段，下述哪种测试是软件测试的最基础环节？", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:A、功能测试", 
   "B:B、单元测试", 
   "C:C、验收测试", 
   "D:D、黑盒测试"
  ]
 }, 
 {
  "A_CONTENT": "以下功能测试用例的描述，错误的是", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:A、避免盲目测试并提高测试效率", 
   "B:B、令软件测试的实施重点突出、目的明确", 
   "C:C、在回归测试中无需修正测试用例便可继续开展测试工作", 
   "D:D、测试用例的通用化和复用化使软件测试易于开展"
  ]
 }, 
 {
  "A_CONTENT": "以下关于测试的描述中，不正确的是", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:A、测试用例不仅要用合理的输入数据，还要选择不合理的输入数据", 
   "B:B、应该制定测试计划并严格执行", 
   "C:C、对发现错误较多的程序段，应进行更深入的测试", 
   "D:D、程序员应尽量测试自己的程序"
  ]
 }, 
 {
  "A_CONTENT": "如果将简单循环的测试方法用于嵌套循环，可能的测试次数会随嵌套层数成几何级数增加。 此时可采用减少测试次数的正确方法之一是（ ）", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:测试从最内层循环开始，所有外层循环次数设置为最小值", 
   "B:测试从最外层循环开始，所有内层循环次数设置为最小值", 
   "C:测试从最内层循环开始，所有外层循环次数设置为最大值", 
   "D:测试从最外层循环开始，所有内层循环次数设置为最大值"
  ]
 }, 
 {
  "A_CONTENT": "白盒测试一般是针对（ ）进行的测试", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:需求", 
   "B:源程序", 
   "C:测试用例", 
   "D:详细设计"
  ]
 }, 
 {
  "A_CONTENT": "用来代替被测模块的子模块的是（ ）", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:驱动模块", 
   "B:桩模块", 
   "C:调用模块", 
   "D:配置模块"
  ]
 }, 
 {
  "A_CONTENT": "系统开发的需求分析阶段的重要工作之一是（ ）", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:数据定义", 
   "B:数据库设计", 
   "C:数据维护", 
   "D:数据结构实现"
  ]
 }, 
 {
  "A_CONTENT": "假定X为整数类型变量，X>=1并且X<=10，如果用边界值分析法，X在测试中应该取", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:A、1，10", 
   "B:B、0，1，10，11", 
   "C:C、1，11", 
   "D:D、1，5，10，11"
  ]
 }, 
 {
  "A_CONTENT": "某系统由3个开发人员开发，开发人员A开发了2000行代码，开发人员B开发了3000行代码，开发人员C开发了2000行代码。经过测试后发现开发人员A所负责的代码中出现10个缺陷，开发人员B所负责的代码中出现15个缺陷，开发人员C所负责的代码中出现8个缺陷，问谁的开发质量更好一些", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:A、开发人员A", 
   "B:B、开发人员B", 
   "C:C、开发人员C", 
   "D:D、都很好"
  ]
 }, 
 {
  "A_CONTENT": "SQL语句中修改表结构的命令是（ ）", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:MODIFY TABLE", 
   "B:MODIFY STRUCTURE", 
   "C:ALTER TABLE", 
   "D:ALTER STRUCTURE"
  ]
 }, 
 {
  "A_CONTENT": "条件覆盖的目的是", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:A、使程序中的每个可执行语句至少执行一次", 
   "B:B、使程序中的每个判定中每个条件的可能值至少满足一次", 
   "C:C、使每个判定的所有可能的条件取值组合至少执行一次", 
   "D:D、使程序中的每个判定至少都获得一次真值和假值"
  ]
 }, 
 {
  "A_CONTENT": "设计功能测试用例的根本依据是", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:A、用户需求规格说明书", 
   "B:B、用户手册", 
   "C:C、被测产品的用户界面", 
   "D:D、概要设计说明书"
  ]
 }, 
 {
  "A_CONTENT": "下列不适合使用功能测试工具的场合是（ ）", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:回归测试", 
   "B:需要频繁更改测试用例的测试", 
   "C:涉及与物理设备交互的测试", 
   "D:跨平台的测试"
  ]
 }, 
 {
  "A_CONTENT": "以下不属于Linux中查看文件的命令是（ ）", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:cat", 
   "B:more", 
   "C:less", 
   "D:menu"
  ]
 }, 
 {
  "A_CONTENT": "软件测试不需要了解软件设计的（ ）", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:功能", 
   "B:内部结构", 
   "C:处理过程", 
   "D:条件"
  ]
 }, 
 {
  "A_CONTENT": "下列哪些属于软件缺陷", 
  "B_ANSWER": "B,C,D", 
  "C_OPTIONS": [
   "A:A、测试人员主观认为不合理的地方", 
   "B:B、软件未达到需求说明书标明的功能", 
   "C:C、软件出现了需求说明书指明不会出现的错误", 
   "D:D、软件功能超出需求说明书指明的范围"
  ]
 }, 
 {
  "A_CONTENT": "与设计测试数据无关的文档是（ ）", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:该软件的设计文档", 
   "B:需求规格说明书", 
   "C:项目开发计划", 
   "D:源程序"
  ]
 }, 
 {
  "A_CONTENT": "下列关于软件测试的说法中正确的是（ ）", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:无经验用户的测试是盲目的，所以对提高软件质量没有帮助", 
   "B:某软件模块发现的缺陷越多，说明该模块潜在的缺陷越多", 
   "C:专业的测试人员要尽量运用测试技术进行测试，直觉和预感是没有用的", 
   "D:软件测试仅仅是测试工程师的工作，与程序员无关"
  ]
 }, 
 {
  "A_CONTENT": "编写测试计划的目的是", 
  "B_ANSWER": "A,C,D", 
  "C_OPTIONS": [
   "A:A、是测试工作更加系统化", 
   "B:B、控制软件质量", 
   "C:C、使项目参与人员沟通更加顺畅", 
   "D:D、让测试人员能够了解整个项目测试情况以及项目测试不同阶段的所要进行的工作"
  ]
 }, 
 {
  "A_CONTENT": "下面说法正确的是（ ）", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:我们无法测试一个程序确认它没有错误", 
   "B:黑盒测试是逻辑驱动的测试", 
   "C:穷举测试一定可以暴露数据敏感错误", 
   "D:白盒测试是一种输入输出驱动的测试"
  ]
 }, 
 {
  "A_CONTENT": "关于同行评审说法正确的是（ ）", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:同行评审是对程序进行模拟，一步步的展示程序如何处理测试数据", 
   "B:同行评审虽然可以缩减工作时间，但同时也增加了大量的成本", 
   "C:在软件开发过程中进行同行评审会浪费时间，减缓项目的进度", 
   "D:同行评审的目的是发现产品的缺陷，因此在评审上的投入可以减少大量的后期返工"
  ]
 }, 
 {
  "A_CONTENT": "在某大学学籍管理信息系统中，假设学生年龄的输入范围为 16～40，则根据黑盒测试中的等价类划分技术，下面划分正确的是：", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:A、可划分为 2 个有效等价类，2 个无效等价类", 
   "B:B、可划分为 1 个有效等价类，2 个无效等价类", 
   "C:C、可划分为 2 个有效等价类，1 个无效等价类", 
   "D:D、可划分为 1 个有效等价类，1 个无效等价类"
  ]
 }, 
 {
  "A_CONTENT": "查询student表中所有非空email信息，以下语句正确的是（ ）", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:Select email from student where email !=null", 
   "B:Select email from student where email not is null", 
   "C:Select email from student where email <> null", 
   "D:Select email from student where email is not null"
  ]
 }, 
 {
  "A_CONTENT": "软件测试计划评审会需要哪些人员参加？（ ）", 
  "B_ANSWER": "A,B,C,D", 
  "C_OPTIONS": [
   "A:项目经理", 
   "B:QA", 
   "C:配置负责人", 
   "D:测试组"
  ]
 }, 
 {
  "A_CONTENT": "（ ）的目的是对最终软件系统进行全面的测试，确保最终软件系统满足产品需求并且遵循系统设计。", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:系统测试", 
   "B:集成测试", 
   "C:单元测试", 
   "D:功能测试"
  ]
 }, 
 {
  "A_CONTENT": "侧重于观察资源耗尽情况下的软件表现的系统测试被称为", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:A、强度测试", 
   "B:B、负载测试", 
   "C:C、容量测试", 
   "D:D、性能测试"
  ]
 }, 
 {
  "A_CONTENT": "测试脚本的编写规范强调：（ ）", 
  "B_ANSWER": "A,B,C,D", 
  "C_OPTIONS": [
   "A:可读性", 
   "B:可重用性", 
   "C:可维护性", 
   "D:可移植性"
  ]
 }, 
 {
  "A_CONTENT": "SQL查询语句中ORDER BY子句的功能是（ ）", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:对查询结果进行排序", 
   "B:分组统计查询结果", 
   "C:限定分组检索结果", 
   "D:限定查询条件"
  ]
 }, 
 {
  "A_CONTENT": "软件需求分析阶段的工作，可以分为四个方面：需求获取，需求分析，编写需求规格说明书，以及（ ）", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:需求报告", 
   "B:需求评审", 
   "C:总结", 
   "D:都不正确"
  ]
 }, 
 {
  "A_CONTENT": "测试记录包括", 
  "B_ANSWER": "A,C", 
  "C_OPTIONS": [
   "A:A、测试计划或包含测试用例的测试规格说明", 
   "B:B、测试期间出现问题的评估与分析", 
   "C:C、与测试用例相关的所有结果", 
   "D:D、测试中涉及的人员身份"
  ]
 }, 
 {
  "A_CONTENT": "下面关于验收测试的描述，错误的是", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:A、验收测试是以用户为主的测试", 
   "B:B、验收测试原则上在客户所在地进行，但如经客户同意也可以在公司内模拟用户环境进行", 
   "C:C、验收测试根据合同、《需求规格说明书》或《验收测试计划》对成品进行验收测试 ", 
   "D:D、验收测试就是回归测试"
  ]
 }, 
 {
  "A_CONTENT": "以下不正确的软件测试原则是", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:A、软件测试可以发现软件潜在的缺陷", 
   "B:B、所有的软件测试都可追溯到用户需求", 
   "C:C、测试应尽早不断地执行", 
   "D:D、程序员应避免测试自己的程序"
  ]
 }, 
 {
  "A_CONTENT": "为验证某订票系统是否能够承受大量用户同时访问，测试工程师一般采用什么测试工具。", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:A、故障诊断", 
   "B:B、代码", 
   "C:C、负载压力", 
   "D:D、网络仿真"
  ]
 }, 
 {
  "A_CONTENT": "系统测试主要使用（ ）技术, 测试被测应用的高级互操作性需求, 而无需考虑被测试应用的内部结构", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:单元测试", 
   "B:集成测试", 
   "C:黑盒测试", 
   "D:白盒测试"
  ]
 }, 
 {
  "A_CONTENT": "用等价类划分法设计对所有实数进行开平方运算的程序的测试用例，可以将输入域进行划分为（ ）", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:正整数、0 和 负整数", 
   "B:正实数、0 和 负实数", 
   "C:有理数和无理数", 
   "D:实数和虚数"
  ]
 }, 
 {
  "A_CONTENT": "缺陷探测率 DDP 是衡量一个公司测试工作效率的软件质量成本的指标。在某公司开发一个软件产品的过程中，开发人员自行发现并修正的缺陷数量为80个，测试人员A发现的缺陷数量为50个，测试人员B发现的缺陷数为50个，测试人员A和测试人员B发现的缺陷不重复，客户反馈缺陷数量为50个，则该公司针对本产品的缺陷探测率为：", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:A、56.5%", 
   "B:B、78.3%", 
   "C:C、43.5%", 
   "D:D、34.8%"
  ]
 }, 
 {
  "A_CONTENT": "在给定文件中查找与设定条件相符字符串的命令是（ ）", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:grep", 
   "B:gzip", 
   "C:find", 
   "D:sort"
  ]
 }, 
 {
  "A_CONTENT": "必须要求用户参与的测试阶段是", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:A、集成测试", 
   "B:B、系统测试", 
   "C:C、确认测试", 
   "D:D、验收测试"
  ]
 }, 
 {
  "A_CONTENT": "对web网站进行的测试中，属于功能测试的是", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:A、连接速度测试", 
   "B:B、链接测试", 
   "C:C、平台测试", 
   "D:D、安全性测试"
  ]
 }, 
 {
  "A_CONTENT": "下列说法不正确的是", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:A、测试不能证明软件的正确性", 
   "B:B、测试人员需要良好的沟通能力", 
   "C:C、QA和测试不是一个概念", 
   "D:D、成功的测试是发现了错误的测试"
  ]
 }, 
 {
  "A_CONTENT": "下面哪种方法不是黑盒测试用例的设计方法。", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:A、场景法   ", 
   "B:B、边界值法     ", 
   "C:C、因果图法   ", 
   "D:D、路径法 "
  ]
 }, 
 {
  "A_CONTENT": "反映web应用客户端交易处理性能的评估指标有", 
  "B_ANSWER": "A,B,C,D", 
  "C_OPTIONS": [
   "A:A、并发用户数", 
   "B:B、交易响应时间", 
   "C:C、吞吐量", 
   "D:D、点击率"
  ]
 }, 
 {
  "A_CONTENT": "如果你使用一个普通帐户telnet远程登陆到linux系统中，如何改变身份以root权限管理系统（ ）", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:chusr", 
   "B:chgrp", 
   "C:chmo", 
   "D:su"
  ]
 }, 
 {
  "A_CONTENT": "loadrunner中要使用集合点进行测试，以下说法错误的是：", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:A、必须在测试脚本中插入集合点", 
   "B:B、必须在controller启用集合点", 
   "C:C、必须所有虚拟用户都到达集合点controller才释放", 
   "D:D、不一定所有虚拟用户都到达集合点controller才释放"
  ]
 }, 
 {
  "A_CONTENT": "在软件性能测试中，下列指标中哪个不是软件性能的指标（ ）", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:响应时间", 
   "B:吞吐量", 
   "C:资源利用率", 
   "D:并发进程数"
  ]
 }, 
 {
  "A_CONTENT": "导致软件缺陷的原因有很多，其中最主要的原因包括：", 
  "B_ANSWER": "A,B,C", 
  "C_OPTIONS": [
   "A:A、软件需求说明书编写的不完整、不准确，而且经常改动", 
   "B:B、开发人员不能很好的理解需求说明书", 
   "C:C、开发人员与设计人员之间缺少沟通", 
   "D:D、测试人员能力不足"
  ]
 }, 
 {
  "A_CONTENT": "测试计划一般包含哪些内容", 
  "B_ANSWER": "A,B,C,D", 
  "C_OPTIONS": [
   "A:A、测试范围", 
   "B:B、测试方法", 
   "C:C、测试环境", 
   "D:D、测试入口及出口准则"
  ]
 }, 
 {
  "A_CONTENT": "下列各项中（ ）不是一个测试计划所应包含的内容", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:测试资源、进度安排", 
   "B:测试预期输出", 
   "C:测试范围", 
   "D:测试策略"
  ]
 }, 
 {
  "A_CONTENT": "下面哪些文档属于测试人员编写的文档", 
  "B_ANSWER": "A,B,D", 
  "C_OPTIONS": [
   "A:A、缺陷报告", 
   "B:B、测试环境配置文档", 
   "C:C、缺陷修复报告", 
   "D:D、测试用例说明文档"
  ]
 }, 
 {
  "A_CONTENT": "防错性程序设计对具有潜在危险性的操作进行检查，并给出出错信息，采用这种程序设计方法可提高系统的（ ）", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:正确性", 
   "B:有效性", 
   "C:健壮性", 
   "D:精确性"
  ]
 }, 
 {
  "A_CONTENT": "软件测试的对象是", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:A、程序", 
   "B:B、文档", 
   "C:C、数据", 
   "D:D、以上都是"
  ]
 }, 
 {
  "A_CONTENT": "下面哪些不是软件测试的正确目的", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:A、尽最大的可能找出最多的错误", 
   "B:B、设计一个好的测试用例可以对用户的需求的覆盖率达到100%", 
   "C:C、对软件质量进行度量和评估，以提高软件的质量", 
   "D:D、发现开发所采用的软件过程的缺陷，进行软件过程改进"
  ]
 }, 
 {
  "A_CONTENT": "针对布尔表达式 A&&(B||C)执行逻辑覆盖测试，测试用例至少需要 多少种组合才能满足多条件覆盖的要求？", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:A、6   ", 
   "B:B、4   ", 
   "C:C、8   ", 
   "D:D、12 "
  ]
 }, 
 {
  "A_CONTENT": "测试用例是为特定的目的而设计的一组测试输入、执行条件和预期的结果；测试用例是执行测试的（ ）", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:最小集合", 
   "B:最大集合", 
   "C:最小实体", 
   "D:最大实体"
  ]
 }, 
 {
  "A_CONTENT": "下面哪些不是一个测试计划应包含的内容", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:A、测试资源、进度", 
   "B:B、测试预期输出", 
   "C:C、测试范围", 
   "D:D、测试策略"
  ]
 }, 
 {
  "A_CONTENT": "访问用Tomcat部署的应用，出现HTTP404错误，产生原因可能是（ ）", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:Tomcat服务器未启动", 
   "B:Tomcat服务器启动，但输入URL的协议错误", 
   "C:Tomcat服务器启动，但输入URL的主机地址错误", 
   "D:Tomcat服务器启动，但输入URL的页面名称错误"
  ]
 }, 
 {
  "A_CONTENT": "为了测试某web系统在资源耗尽的情况下的表现，应使用", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:A、负载测试", 
   "B:B、压力测试", 
   "C:C、并发测试", 
   "D:D、大数据量测试"
  ]
 }, 
 {
  "A_CONTENT": "不用执行程序，目的是收集有关程序代码的结构信息，这一过程是( )", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:性能测试", 
   "B:静态分析", 
   "C:增量测试", 
   "D:动态测试"
  ]
 }, 
 {
  "A_CONTENT": "SELECT语句中“SELECT  DISTINCT”表示查询结果中（ ）", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:去掉相同的属性名", 
   "B:去掉了重复的列", 
   "C:行都不相同", 
   "D:属性值都不相同"
  ]
 }, 
 {
  "A_CONTENT": "对于页面的输入框设计测试用例，一般采用", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:A、等价类划分", 
   "B:B、边界值分析+等价类划分", 
   "C:C、因果图", 
   "D:D、边界值分析"
  ]
 }, 
 {
  "A_CONTENT": "top命令的作用是（ ）", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:返回至顶层目录", 
   "B:显示系统运行时间", 
   "C:显示系统当前运行状况", 
   "D:关机"
  ]
 }, 
 {
  "A_CONTENT": "下列针对SVN描述正确的是", 
  "B_ANSWER": "A,B,C", 
  "C_OPTIONS": [
   "A:A、是一种版本控制工具", 
   "B:B、可以通过检查历史知道做了哪些修改，谁做得修改", 
   "C:C、可以将文件恢复到过去的版本", 
   "D:D、上传文件时可以直接上传，不用检查SVN上的版本是否有别人做了修改"
  ]
 }, 
 {
  "A_CONTENT": "下述关于错误处理流程管理的原则， 哪种说法是不正确的。", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:A、为了保证正确地定位错误，需要有丰富测试经验的测试人员验证发现的错误是否是真正的错误，并且验证错误是否可以再现 ", 
   "B:B、每次对错误的处理都要保留处理信息，包括处理人姓名、处理时间、处理方法、处理意见以及错误状态 ", 
   "C:C、错误修复后必须由报告错误的测试人员确认错误已经修复，才能关闭错误 ", 
   "D:D、对于无法再现的错误，应该由项目经理，测试经理和设计经理共同讨论决定拒绝或者延期"
  ]
 }, 
 {
  "A_CONTENT": "（ ）表示数字总长度10位，其中小数点后保留2位有效数", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:decimal(8,2)", 
   "B:decimal(10,2）", 
   "C:decimal(12,2)", 
   "D:decimal(2,10)"
  ]
 }, 
 {
  "A_CONTENT": "下列描述错误的是", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:A、软件发布后如果发现质量问题，那是软件测试人员的问题", 
   "B:B、穷尽测试实际上在一般情况下是不可行的", 
   "C:C、软件测试自动化不是万能的", 
   "D:D、测试能由非开发人员进行，调试必须由开发人员进行"
  ]
 }, 
 {
  "A_CONTENT": "以下哪一项属于软件易用性测试关注的范畴（ ）", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:软件是否能在多种操作系统下运行", 
   "B:软件是否能与同类软件共享数据", 
   "C:软件是否能主动禁止用户可能进行的非法操作", 
   "D:软件是否能够抵御网络攻击"
  ]
 }, 
 {
  "A_CONTENT": "软件设计阶段的测试主要采取的方式是( )", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:评审", 
   "B:白盒测试", 
   "C:黑盒测试", 
   "D:以上全部"
  ]
 }, 
 {
  "A_CONTENT": "下面那个不属于功能测试用例的构成元素", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:A、测试数据  ", 
   "B:B、测试步骤   ", 
   "C:C、预期结果   ", 
   "D:D、实测结果"
  ]
 }, 
 {
  "A_CONTENT": "为了提高测试的效率，应该", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:A、随机的选择测试数据", 
   "B:B、取一切可能的输入数据作为测试数据", 
   "C:C、在完成编码后制定测试计划", 
   "D:D、选择发现错误可能性大的数据作为测试数据"
  ]
 }, 
 {
  "A_CONTENT": "软件测试人员究竟做什么", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:A、发现软件缺陷", 
   "B:B、尽可能早的发现软件缺陷", 
   "C:C、尽可能早的发现软件缺陷，并确保其得到修复", 
   "D:D、尽可能早的发现软件缺陷，并将其修复"
  ]
 }, 
 {
  "A_CONTENT": "下面哪些做法会影响测试质量？", 
  "B_ANSWER": "A,B,C,D", 
  "C_OPTIONS": [
   "A:A、用户需求频繁变化", 
   "B:B、测试流程不规范", 
   "C:C、测试人员变动", 
   "D:D、测试周期被压缩"
  ]
 }, 
 {
  "A_CONTENT": "某次程序调试没有出现预计的结果，下列（ ）不可能是导致出错的原因", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:变量没有初始化", 
   "B:编写的语句书写格式不规范", 
   "C:循环控制出错", 
   "D:代码输入有误"
  ]
 }, 
 {
  "A_CONTENT": "划分软件测试是属于白盒测试还是黑盒测试的依据是", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:A、是否执行程序代码", 
   "B:B、是否能看到软件设计文档", 
   "C:C、是否能看到被测源程序", 
   "D:D、运行结果是否确定"
  ]
 }, 
 {
  "A_CONTENT": "某测试人员关于登录的测试用例“用户名：张三，密码：123456，点击登录按钮”，此用例有什么问题？", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:A、缺少输入数据", 
   "B:B、缺少操作步骤", 
   "C:C、缺少实际结果", 
   "D:D、缺少预期结果"
  ]
 }, 
 {
  "A_CONTENT": "软件测试的目的是", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:A、发现程序中所有的错误", 
   "B:B、尽可能多的发现程序中的错误", 
   "C:C、证明程序是正确的", 
   "D:D、调试程序"
  ]
 }, 
 {
  "A_CONTENT": "现有书目表book，包含字段：价格price（float），类别type（char），现在查询各个类别的平均价格，类别名称，以下sql语句正确的是（ ）", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:select avg(price),type from book group by type", 
   "B:select count(price),type from book group by price", 
   "C:select avg(price),type from book group by price", 
   "D:select count (price),type from book group by type"
  ]
 }, 
 {
  "A_CONTENT": "在集成测试策略的环境中，对某些已经进行过的测试的某些子集再重新进行一遍，以保证上述改变不会传播无法预料的副作用或引发新的问题，这一测试称为（ ）", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:集成测试", 
   "B:确认测试", 
   "C:系统测试", 
   "D:回归测试"
  ]
 }, 
 {
  "A_CONTENT": "检视代码、评审开发文档，这属于", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:A、动态测试", 
   "B:B、静态测试", 
   "C:C、黑盒测试", 
   "D:D、白盒测试"
  ]
 }, 
 {
  "A_CONTENT": "关于缺陷管理流程，正确的做法是", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:A、开发人员提交新的缺陷入库，设置状态为新建", 
   "B:B、开发人员确认是缺陷，设置状态为修复", 
   "C:C、测试人员确认是问题解决，设置状态为关闭", 
   "D:D、测试人员确认不是缺陷，设置状态为重新打开"
  ]
 }, 
 {
  "A_CONTENT": "错误管理的流程可以概括为：测试人员提交新的错误入库，错误状态为 1；高级测试人员验证错误，如果确认是错误，分配给相应的开发人员，设置状态为 2，如果不是错误，则拒绝，设置为“拒绝”状态；开发人员查询状态为 3 的错误，做如下处理：如果不是错误，则置状态为“拒绝”，如果是错误则修复并置状态为 4，如果不能解决的错误，要留下文字说明并保持错误为“拒绝”状态；测试人员查询状态为 5 的错误，验证错误是否已解决，做如下处理：如问题解决了置错误的状态为 6，如问题没有解决则置状态为 7。上述流程中 1 至 7 相对应的状态标识为 ", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:A、新信息→打开→打开→修正→修正→关闭→重新打开", 
   "B:B、打开→修正→关闭→修正→修正→关闭→打开", 
   "C:C、新信息→打开→打开→关闭→修正→关闭→重新打开", 
   "D:D、新信息→打开→打开→修正→关闭→修正→重新打开"
  ]
 }, 
 {
  "A_CONTENT": "模块分析可以看做是在体系结构分析工作基础上的细化，一般模块划分要考虑的问题有（ ）", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:确定作为测试重点的模块", 
   "B:找出模块间的关系，按密切程度对模块进行排队", 
   "C:考虑模块集成的次序", 
   "D:以上全部"
  ]
 }, 
 {
  "A_CONTENT": "对于下列内容：（1）需求分析说明书（2）概要设计说明书（3）详细设计说明书（4）源程序代码。关于单元测试的描述，正确的说法是（ ）", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:与（1）（2）（3）有关", 
   "B:只与（4）有关", 
   "C:只与（3）（4）有关", 
   "D:与（1）（2）（3）（4）都有关"
  ]
 }, 
 {
  "A_CONTENT": "性能测试过程中需要对数据库服务器的资源进行监控，不属于应该监控的指标是", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:A、CPU占用率", 
   "B:B、内存使用率", 
   "C:C、点击率", 
   "D:D、缓存命中率"
  ]
 }, 
 {
  "A_CONTENT": "使用软件测试工具的目的不包括", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:A、帮助测试寻找问题", 
   "B:B、协助问题的诊断", 
   "C:C、节省测试时间", 
   "D:D、提高设计质量"
  ]
 }, 
 {
  "A_CONTENT": "假定X为整数类型变量，1<=X<=100，测试甲设计了5个测试用例，测试乙设计了6个测试用例，问谁的测试用例效率更高？", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:A、甲比乙高", 
   "B:B、乙比甲高", 
   "C:C、一样高", 
   "D:D、都不高"
  ]
 }, 
 {
  "A_CONTENT": "学生社团可以接纳多名学生参加，但每个学生只能参加一个社团，从社团到学生之间的联系类型是（ ）", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:多对多", 
   "B:一对一", 
   "C:多对一", 
   "D:一对多"
  ]
 }, 
 {
  "A_CONTENT": "软件工程中（ ）不属于用户文档的内容", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:帮助文档", 
   "B:安装手册", 
   "C:系统设计", 
   "D:使用手册"
  ]
 }, 
 {
  "A_CONTENT": "软件的维护是指（ ）", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:对软件的改进，适应和完善", 
   "B:维护正常运行", 
   "C:配置新软件", 
   "D:软件开发期的一个阶段"
  ]
 }, 
 {
  "A_CONTENT": "软件测试的基本方法包括白盒测试和黑盒测试方法，以下关于二者之间关联的叙述，错误的是", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:A、黑盒测试与白盒测试是设计测试用例的两种基本方法", 
   "B:B、在集成测试阶段是采用黑盒测试与白盒测试相结合的方法", 
   "C:C、针对相同的系统模块，执行黑盒测试和白盒测试对代码的覆盖率都能够达到100％", 
   "D:D、应用系统负载压力测试一般采用黑盒测试方法"
  ]
 }, 
 {
  "A_CONTENT": "在建立一个数据库表时，如果规定某一列的缺省值为0，则说明（ ）", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:该列的数据不可更改", 
   "B:当插入数据行时，必须指定该列值为0", 
   "C:当插入数据行时，如果没有指定该值，那么该列值为0", 
   "D:当插入数据行时，无须显式指定该列值"
  ]
 }, 
 {
  "A_CONTENT": "\"对于下列描述：（1）软件未达到产品说明书中已经标明的功能；（2）软件出现了产品说明书中指明不会出现的错误；（3）软件未达到产品说明书中虽未指出但应当达到的目标； （4）软件功能超出了产品说明书中指明的范围。 正确的说法是（ ）\"", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:A、（1）（2）（3）属于软件缺陷", 
   "B:只有（4）属于软件缺陷", 
   "C:（1）（2）（3）（4）都属于软件缺陷", 
   "D:只有（1）（2）属于软件缺陷"
  ]
 }, 
 {
  "A_CONTENT": "软件测试配置的目标：", 
  "B_ANSWER": "A,B,C,D", 
  "C_OPTIONS": [
   "A:A、在测试过程中控制和审计测试活动的变更", 
   "B:B、在测试过程中随着测试项目的里程碑同步建立相应的基线", 
   "C:C、在测试过程中记录并跟踪测试活动中的变更请求", 
   "D:D、在测试过程中标识相应的软件测试活动或产品"
  ]
 }, 
 {
  "A_CONTENT": "针对系统测试用例的评审，一般会采用哪种方式", 
  "B_ANSWER": "A,B,C", 
  "C_OPTIONS": [
   "A:A、正式评审", 
   "B:B、面对面检查", 
   "C:C、走查", 
   "D:D、会议评审"
  ]
 }, 
 {
  "A_CONTENT": "下面不是按照测试技术分类的是", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:A、白盒测试", 
   "B:B、黑盒测试", 
   "C:C、性能测试", 
   "D:D、灰盒测试"
  ]
 }, 
 {
  "A_CONTENT": "通常测试用例很难100％覆盖测试需求，因为", 
  "B_ANSWER": "A,B,C,D", 
  "C_OPTIONS": [
   "A:A、输入量太大", 
   "B:B、输出结果太多", 
   "C:C、路径组合多", 
   "D:D、测试的人员和时间有限"
  ]
 }, 
 {
  "A_CONTENT": "一个系统登录功能通常需要做( )", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:功能测试", 
   "B:性能测试", 
   "C:安全性测试", 
   "D:以上全部"
  ]
 }, 
 {
  "A_CONTENT": "单元测试中设计测试用例的最主要依据是( )", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:概要设计规格说明书", 
   "B:用户需求规格说明书", 
   "C:项目计划说明书", 
   "D:详细设计规格说明书"
  ]
 }, 
 {
  "A_CONTENT": "在做安全性测试之前，首先要分析（ ）", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:资产和危险", 
   "B:暴露出来的行为", 
   "C:安全性控制", 
   "D:以上全部"
  ]
 }, 
 {
  "A_CONTENT": "用等价类划分法设计8位长数字类型用户名登录操作的测试用例，应该分成多少个等价区间？", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:A、2", 
   "B:B、3", 
   "C:C、4", 
   "D:D、6"
  ]
 }, 
 {
  "A_CONTENT": "下列关于缺陷分类的说法中错误的是（ ）", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:按严重性来给缺陷进行分类，主要是从产品和用户的角度来考虑", 
   "B:优先级表示修复缺陷的迫切程度和应该何时修复", 
   "C:缺陷越严重，优先级越高", 
   "D:缺陷的优先级随着项目的发展会发生变化"
  ]
 }, 
 {
  "A_CONTENT": "自动化测试的优点有", 
  "B_ANSWER": "A,B,C", 
  "C_OPTIONS": [
   "A:A、速度快，效率高", 
   "B:B、准确度和精确度高", 
   "C:C、能提高测试的质量", 
   "D:D、能充分测试软件"
  ]
 }, 
 {
  "A_CONTENT": "白盒测试是根据程序的___来设计测试用例", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:A、功能", 
   "B:B、性能", 
   "C:C、内部逻辑", 
   "D:D、内部数据"
  ]
 }, 
 {
  "A_CONTENT": "为预测某web系统可支持的最大在线用户数，应进行", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:A、负载测试", 
   "B:B、压力测试", 
   "C:C、大数据量测试", 
   "D:D、疲劳强度测试"
  ]
 }, 
 {
  "A_CONTENT": "在功能测试中，假如有实数x≥0，我们把x划分成两个区间即(0,1)和(1,+∞),然后分别在两个区间中取值x=0.5和x=5.0进行测试，那么这种测试属于（ ）", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:边界值分析法", 
   "B:绝对值分析法", 
   "C:相对值分析法", 
   "D:等价划分法"
  ]
 }, 
 {
  "A_CONTENT": "界面元素的布局，获取测试数据的考虑不包括（ ）", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:界面元素的大小", 
   "B:界面元素的位置", 
   "C:界面元素的对齐方式", 
   "D:界面元素间的色彩搭配"
  ]
 }, 
 {
  "A_CONTENT": "以下关于测试时机的描述中，正确的是", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:A、应尽可能早的进行测试", 
   "B:B、若能推迟暴露软件中的错误，则修复和改正错误花费的代价就会降低", 
   "C:C、应在代码编写完成后开始测试", 
   "D:D、需求分析和设计阶段不需要测试人员参与"
  ]
 }, 
 {
  "A_CONTENT": "学生成绩表grade中有字段score（float），现在要把所有在55分至60分之间的分数提高5分，以下sql语句正确的是（ ）", 
  "B_ANSWER": "C,D", 
  "C_OPTIONS": [
   "A:Update grade set score=score+5", 
   "B:Update grade set score=score+5 wherescore>=55 or score <=60", 
   "C:Update grade set score=score+5 wherescore between 55 and 60", 
   "D:Update grade set score=score+5 wherescore >=55 and score <=60"
  ]
 }, 
 {
  "A_CONTENT": "功能测试覆盖中最常见的是（ ）", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:接口覆盖", 
   "B:代码覆盖", 
   "C:需求覆盖", 
   "D:出入口覆盖"
  ]
 }, 
 {
  "A_CONTENT": "在E-R模型中，包含以下基本成分（ ）", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:数据、对象、实体", 
   "B:控制、联系、对象", 
   "C:实体、联系、属性", 
   "D:实体、属性、操作"
  ]
 }, 
 {
  "A_CONTENT": "下面哪些属于缺陷", 
  "B_ANSWER": "A,B,C,D", 
  "C_OPTIONS": [
   "A:A、前台页面报JS错", 
   "B:B、前台页面没有报错，后台容器中报错", 
   "C:C、前台页面抛出错误", 
   "D:D、页面文字错误"
  ]
 }, 
 {
  "A_CONTENT": "负载压力性能测试需求分析时，应该选择下面哪些类型的业务作为测试案例", 
  "B_ANSWER": "A,C,D", 
  "C_OPTIONS": [
   "A:A、高吞吐量的业务", 
   "B:B、业务逻辑复杂的业务", 
   "C:C、高商业风险的业务", 
   "D:D、高服务器负载的业务大"
  ]
 }, 
 {
  "A_CONTENT": "软件测试原则中指出“完全测试是不可能的”，主要原因是", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:A、输入量太大，输出结果太多以及路径组合太多", 
   "B:B、自动化测试技术不够完善", 
   "C:C、测试的人员和时间有限", 
   "D:D、仅仅靠黑盒测试不能达到完全测试"
  ]
 }, 
 {
  "A_CONTENT": "版本管理是对系统不同版本进行的（ ）", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:标识与跟踪", 
   "B:标识变更", 
   "C:发布变更", 
   "D:控制变更"
  ]
 }, 
 {
  "A_CONTENT": "在mantis中，有哪些角色？", 
  "B_ANSWER": "A,B,C,D,E,F", 
  "C_OPTIONS": [
   "A:A、管理员", 
   "B:B、处理员", 
   "C:C、报告员", 
   "D:D、查看员", 
   "E:E、经理", 
   "F:F、修改员"
  ]
 }, 
 {
  "A_CONTENT": "下列测试中不属于系统测试范畴的是（ ）", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:性能测试", 
   "B:集成测试", 
   "C:压力测试", 
   "D:可靠性测试"
  ]
 }, 
 {
  "A_CONTENT": "以下不属于客户端交易处理性能指标是", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:A、并发用户数", 
   "B:B、平均事务响应时间", 
   "C:C、每秒事务数", 
   "D:D、每秒进程切换数"
  ]
 }, 
 {
  "A_CONTENT": "以下（ ）语句从表TABLE_NAME中提取前10条记录", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:select * from TABLE_NAME where rowcount=10", 
   "B:select TOP 10 * from TABLE_NAME", 
   "C:select TOP of 10 * from TABLE_NAME", 
   "D:select * from TABLE_NAME where rowcount<=10"
  ]
 }, 
 {
  "A_CONTENT": "测试ATM取款功能，已知取款数只能输入正整数，每次取款数要求是100的倍数且不能大于500，下面哪个是正确的无效等价类（ ）", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:（0，100）、（100，200）、（200，300）、（300，400）、（400，500）、（500，+∞）", 
   "B:（500，+∞）", 
   "C:（500，+∞）、任意大于0小于500的非100倍数的整数", 
   "D:（-∞，100）、（100，200）、（200，300）、（300，400）、（400，500）、（500，+∞）"
  ]
 }, 
 {
  "A_CONTENT": "下列有关测试过程V模型的说法中，正确的是（ ）", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:验收测试应确定程序的执行是否满足软件设计的要求", 
   "B:系统测试应确定系统功能和性能的质量特性是否达到系统要求的指标", 
   "C:单元测试和集成测试应确定软件的实现是否满足用户需要或合同的要求", 
   "D:集成测试在编码结束前就可以开始"
  ]
 }, 
 {
  "A_CONTENT": "关于软件测试对软件质量的意义，有以下一些观点，其中错误的是：", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:A、度量与评估软件的质量", 
   "B:B、改进软件开发过程", 
   "C:C、保证软件质量", 
   "D:D、发现软件错误"
  ]
 }, 
 {
  "A_CONTENT": "下列各项中，评审方法是按照正式化程序逐渐增强排列的是（ ）", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:正式评审、面对面评审、走查", 
   "B:走查、面对面评审、正式评审", 
   "C:面对面评审、正式评审、走查", 
   "D:面对面评审、走查、正式评审"
  ]
 }, 
 {
  "A_CONTENT": "若要删除BOOK表中的所有数据，以下语句错误的是（ ）", 
  "B_ANSWER": "B,C", 
  "C_OPTIONS": [
   "A:truncate table book", 
   "B:delete * from book", 
   "C:drop table book", 
   "D:delete  from book"
  ]
 }, 
 {
  "A_CONTENT": "关于集成测试的描述中，正确的是", 
  "B_ANSWER": "A,D", 
  "C_OPTIONS": [
   "A:A、集成测试也叫做组装测试或联合测试，通常是在单元测试的基础上，将所有模块按照概要设计说明书和详细设计说明书的要求进行组装和测试的过程", 
   "B:B、自顶向下的增殖方式是集成测试的一种组装方式，它能较早地验证主要的控制和判断点，对于输入输出模块、复杂算法模块中存在的错误能够较早地发现", 
   "C:C、自底向上的增殖方式需要建立桩模块，并行地对多个模块实施测试，并逐步形成程序实体，完成所有模块的组装和集成测试", 
   "D:D、在集成测试时，测试者应当确定关键模块，对这些关键模块及早进行测试，比如高层控制模块、有明确性能要求和定义的模块等"
  ]
 }, 
 {
  "A_CONTENT": "在确定黑盒测试策略时，优先选用的方法是", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:A、边界值分析法", 
   "B:B、等价类划分法", 
   "C:C、路径覆盖法", 
   "D:D、因果图"
  ]
 }, 
 {
  "A_CONTENT": "Rational Robot是一种强大的自动化测试工具，主要通过编写脚本的方式提供自动化测试特性。其中图形用户界面（GUI）脚本主要用于（ ）", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:用户测试", 
   "B:单元测试", 
   "C:性能测试", 
   "D:功能测试"
  ]
 }, 
 {
  "A_CONTENT": "关于白盒测试与黑盒测试的最主要区别，正确的是：", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:A、白盒测试侧重于程序结构，黑盒测试侧重于功能", 
   "B:B、白盒测试可以使用测试工具，黑盒测试不能使用工具", 
   "C:C、白盒测试需要程序员参与，黑盒测试不需要", 
   "D:D、黑盒测试比白盒测试应用更广泛"
  ]
 }, 
 {
  "A_CONTENT": "自动化测试工具中，最难自动化的是", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:A、测试执行", 
   "B:B、实际输出与预计输出的比较", 
   "C:C、测试用例生成", 
   "D:D、录制与回放"
  ]
 }, 
 {
  "A_CONTENT": "（ ）方法根据输出对输入的依赖关系设计测试用例", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:路径测试", 
   "B:等价类", 
   "C:因果图", 
   "D:归纳测试"
  ]
 }, 
 {
  "A_CONTENT": "哪种测试用例设计方法既可以用于黑盒测试，也可以用于白盒测试。", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:A、边界值法  ", 
   "B:B、基本路径法  ", 
   "C:C、正交试验设计法  ", 
   "D:D、逻辑覆盖法"
  ]
 }, 
 {
  "A_CONTENT": "不属于测试人员编写的文档是", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:A、缺陷报告", 
   "B:B、测试环境配置文档", 
   "C:C、缺陷修复报告", 
   "D:D、测试用例说明文档"
  ]
 }, 
 {
  "A_CONTENT": "以下选项中不属于软件缺陷状态的是（ ）", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:已解决", 
   "B:已分派", 
   "C:已测试", 
   "D:已关闭"
  ]
 }, 
 {
  "A_CONTENT": "以下关于测试用例的描述，错误的是", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:A、最有可能抓住错误的", 
   "B:B、一定会有重复、多余的", 
   "C:C、一组相似用例中最有效的", 
   "D:D、既不是太简单、也不是太复杂"
  ]
 }, 
 {
  "A_CONTENT": "下列模型哪个软件测试过程模型（ ）", 
  "B_ANSWER": "A,D", 
  "C_OPTIONS": [
   "A:W模型", 
   "B:漠布模型", 
   "C:L模型", 
   "D:V模型"
  ]
 }, 
 {
  "A_CONTENT": "用边界值分析法，假定 X 为整数，10≤X≤100，那么 X 在测试中应该取什么？", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:A、X=10，X=100   ", 
   "B:B、X=9，X=10，X=100，X=101", 
   "C:C、X=10，X=11，X=99，X=100   ", 
   "D:D、X=9，X=10，X=50，X=100 "
  ]
 }, 
 {
  "A_CONTENT": "Junit是一个开放源代码的（ ）测试框架，用于编写和运行可重复的测试代码", 
  "B_ANSWER": "A,C", 
  "C_OPTIONS": [
   "A:JAVA", 
   "B:黑盒", 
   "C:白盒", 
   "D:.NET"
  ]
 }, 
 {
  "A_CONTENT": "采用自底向上集成测试中，要编写称为__的模块来检验正在测试的模块", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:A、测试存根", 
   "B:B、测试驱动模块", 
   "C:C、桩模块", 
   "D:D、底层模块"
  ]
 }, 
 {
  "A_CONTENT": "在各种资源超负荷情况下，观察系统的运行情况的测试是什么测试方法（ ）", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:强度测试", 
   "B:容量测试", 
   "C:负载测试", 
   "D:失效恢复测试"
  ]
 }, 
 {
  "A_CONTENT": "功能或特性没有实现，主要功能部分丧失，次要功能完全丧失，或致命的错误声明，这属于软件缺陷级别中的（ ）", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:致命缺陷", 
   "B:严重缺陷", 
   "C:一般缺陷", 
   "D:微小缺陷"
  ]
 }, 
 {
  "A_CONTENT": "下列关于mantis描述，正确的是：", 
  "B_ANSWER": "A,B,C,D", 
  "C_OPTIONS": [
   "A:A、个人可定制的Email通知功能", 
   "B:B、支持多项目", 
   "C:C、权限设置灵活，不同角色有不同权限，每个项目可设为公开或私有状态，每个缺陷可设为公开或私有状态", 
   "D:D、有各种缺陷趋势图和柱状图，为项目状态分析提供依据"
  ]
 }, 
 {
  "A_CONTENT": "下列关于Web应用软件测试的说法中，正确的是（ ）", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:Cookie测试是Web应用软件功能测试的重要内容", 
   "B:对于没有使用数据库的Web应用软件，不需要进行性能测试", 
   "C:链接测试是Web应用软件易用性测试的重要内容", 
   "D:Web应用软件安全性测试仅关注Web应用软件是能够防御网络攻击"
  ]
 }, 
 {
  "A_CONTENT": "设计测试用例时不需要用到的文档是", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:A、项目开发计划", 
   "B:B、需求规格说明书", 
   "C:C、设计文档", 
   "D:D、页面demo"
  ]
 }, 
 {
  "A_CONTENT": "软件测试过程中的集成测试主要是为了发现（ ）阶段的错误", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:需求分析", 
   "B:概要设计", 
   "C:编码", 
   "D:维护"
  ]
 }, 
 {
  "A_CONTENT": "下列关于随机测试的说法中错误的是（ ）", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:许多测试都是冗余的", 
   "B:测试数据大多是随机的，重复测试是不可能的", 
   "C:无法度量随机测试实际覆盖率", 
   "D:随机测试的成本大，时间长，是一种不值得一做的测试"
  ]
 }, 
 {
  "A_CONTENT": "关于自动化测试的描述，以下正确的描述有", 
  "B_ANSWER": "A,B,C,D", 
  "C_OPTIONS": [
   "A:A、自动化测试不能取代手工测试", 
   "B:B、自动化测试维护成本较高", 
   "C:C、自动化测试不能提高测试覆盖率", 
   "D:D、自动化测试对测试设计的依赖性较大"
  ]
 }, 
 {
  "A_CONTENT": "将网卡(eth0)配置成ip地址为192.168.1.13同时激活此网卡的命令是（ ）", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:ifconfig eth0 192.168.1.13 down", 
   "B:ifconfig eth0 192.168.1.13 off", 
   "C:ifconfig eth0 192.168.1.13 on", 
   "D:ifconfig eth0 192.168.1.13 up"
  ]
 }, 
 {
  "A_CONTENT": "缺陷产生的原因有（ ）", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:交流不充分及沟通不畅；软件需求的变更；软件开发工具的缺陷", 
   "B:软件的复杂性；软件项目的时间压力", 
   "C:程序开发人员的错误；软件项目文档的缺乏", 
   "D:以上都是"
  ]
 }, 
 {
  "A_CONTENT": "测试用例应包括下列哪些内容的详细信息？", 
  "B_ANSWER": "A,B,C,D", 
  "C_OPTIONS": [
   "A:A、测试目标和被测功能", 
   "B:B、测试环境和其他条件", 
   "C:C、测试数据和测试步骤", 
   "D:D、测试预期结果"
  ]
 }, 
 {
  "A_CONTENT": "下列哪种项目适合采用瀑布模型（ ）", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:需求不明确、规模较小", 
   "B:需求明确、规模较大", 
   "C:需求不明确、规模较大", 
   "D:需求明确、规模较小"
  ]
 }, 
 {
  "A_CONTENT": "下列文件中，包含了主机名到IP地址的映射关系的文件是（ ）", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:/etc/HOSTNAME", 
   "B:/etc/hosts", 
   "C:/etc/resolv.conf", 
   "D:/etc/networks"
  ]
 }, 
 {
  "A_CONTENT": "假设一个软件的数据输入要求是4位整数，则利用边界值分析法，输入的有效等价类和无效等价类的边界值分别为（ ）", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:1000，9999；1000，10000", 
   "B:999，9999；999，10000", 
   "C:1000，9999；999，10000", 
   "D:999，9999；1000，100000"
  ]
 }, 
 {
  "A_CONTENT": "下述说法错误的是？", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:A、单元测试又称模块测试，是针对软件设计的最小单位—程序模块进行正确性检验的测试工作", 
   "B:B、集成测试也叫做组装测试，通常在编码完成的基础上，将所有的程序模块进行有序的、递增的测试", 
   "C:C、集成测试是检验程序单元或部件的接口关系，逐步集成为符合概要设计要求的程序部件或整个系统", 
   "D:D、系统测试是在真实或模拟系统运行环境下，检查完整的程序系统能否和相关硬件、外设、网络、系统软件和支持平台等正确配置与连接，并满足用户需求"
  ]
 }, 
 {
  "A_CONTENT": "使用命令chmod的数字设置,可以改变（ ）", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:文件的访问特权", 
   "B:目录的访问特权", 
   "C:文件/目录的访问特权", 
   "D:什么也改变不了"
  ]
 }, 
 {
  "A_CONTENT": "碰到无法重现的缺陷，测试人员应该采取的措施是（ ）", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:对缺陷的现象进行详细记录，并尽快将该缺陷提交给开发人员", 
   "B:优化缺陷，找到缺陷产生的原因后，再提交给开发人员", 
   "C:直接将该缺陷提交给开发人员", 
   "D:报告给测试管理者，请管理者决定是否提交给开发人员"
  ]
 }, 
 {
  "A_CONTENT": "在设计一个充分的健壮性测试思路上通常考虑使用的策略有（ ）", 
  "B_ANSWER": "A,C,D", 
  "C_OPTIONS": [
   "A:基于覆盖率的策略", 
   "B:基于可靠性的策略", 
   "C:基于错误的策略", 
   "D:基于失效的策略"
  ]
 }, 
 {
  "A_CONTENT": "下列关于软件测试的描述，哪些是正确的", 
  "B_ANSWER": "A,B,C", 
  "C_OPTIONS": [
   "A:A、软件测试是有风险的行为", 
   "B:B、完全测试程序是不可能的", 
   "C:C、测试无法显示潜伏的软件缺陷", 
   "D:D、找到的缺陷越多软件的缺陷越少"
  ]
 }, 
 {
  "A_CONTENT": "软件验收测试的合格通过准则是：（ ）", 
  "B_ANSWER": "A,B,C,D", 
  "C_OPTIONS": [
   "A:软件需求分析说明书中定义的所有功能已全部实现，性能指标全部达到要求", 
   "B:所有测试项没有残余一级、二级和三级错误", 
   "C:立项审批表、需求分析文档、设计文档和编码实现一致", 
   "D:验收测试工件齐全"
  ]
 }, 
 {
  "A_CONTENT": "在软件测试活动中，下面属于动态测试类型的是（ ）", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:性能测试", 
   "B:类型检查", 
   "C:代码评审", 
   "D:接口分析"
  ]
 }, 
 {
  "A_CONTENT": "对于mantis角色的权限，下面哪种说法是正确的：", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:A、经理>管理员>修改员>处理员>报告员>查看员   ", 
   "B:B、经理>管理员>处理员>修改员>报告员>查看员", 
   "C:C、管理员>经理>处理员>修改员>报告员>查看员   ", 
   "D:D、经理>管理员>修改员>处理员>查看员>报告员 "
  ]
 }, 
 {
  "A_CONTENT": "用户访问某web网站，浏览器上显示“http-404”错误，则故障原因是", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:A、所请求页面不存在", 
   "B:B、web服务器内部出错", 
   "C:C、用户无权访问", 
   "D:D、以上都不对"
  ]
 }, 
 {
  "A_CONTENT": "关于软件测试的说法，不正确的是。", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:A、代码审查是代码检查的一种，是由程序员和测试员组成一个审查小组，通过阅读、讨论和争议，对程序进行静态分析的过程", 
   "B:B、软件测试的对象不仅仅是程序，文档、数据和规程都是软件测试的对象", 
   "C:C、白盒测试是通过对程序内部结构的分析、检测来寻找问题的测试方法", 
   "D:D、单元测试是针对软件设计的最小单位—程序模块进行正确性检验的测试工作，它通常需要开发辅助的桩模块作为主程序调用被测模块来完成测试"
  ]
 }, 
 {
  "A_CONTENT": "“尽早地和及时地测试”这句话描述的是（ ）", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:软件测试目的", 
   "B:软件测试原则", 
   "C:软件测试停止的依据", 
   "D:软件测试基本问题"
  ]
 }, 
 {
  "A_CONTENT": "确定测试计划是在（ ）阶段制定的", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:总体设计", 
   "B:详细设计", 
   "C:编码", 
   "D:测试"
  ]
 }, 
 {
  "A_CONTENT": "软件缺陷修复代价最高的阶段为", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:A、发布阶段", 
   "B:B、需求阶段", 
   "C:C、设计阶段", 
   "D:D、开发阶段"
  ]
 }, 
 {
  "A_CONTENT": "软件测试计划的内容应包括( )", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:测试目的、背景", 
   "B:被测软件的功能、输入和输出", 
   "C:测试内容和评价标准", 
   "D:以上全部"
  ]
 }, 
 {
  "A_CONTENT": "软件的集成测试工作最好由（ ）承担，以提高集成测试的效果", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:该软件的设计人员", 
   "B:该软件开发组的负责人", 
   "C:不属于该软件开发组的软件设计人员", 
   "D:该软件的编程人员"
  ]
 }, 
 {
  "A_CONTENT": "Web应用系统负载压力测试中，下面哪个不是衡量业务执行效率的指标。", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:A、并发请求数 ", 
   "B:B、每秒点击率", 
   "C:C、交易执行吞吐量", 
   "D:D、交易执行响应时间"
  ]
 }, 
 {
  "A_CONTENT": "关于软件测试，下面哪些叙述是错误的。", 
  "B_ANSWER": "B,C,D", 
  "C_OPTIONS": [
   "A:A、测试开始越早，越有利于发现软件缺陷", 
   "B:B、采用正确的测试用例设计方法，软件测试可以做到穷举测试", 
   "C:C、测试覆盖度和测试用例数量成正比", 
   "D:D、软件测试的时间越长越好"
  ]
 }, 
 {
  "A_CONTENT": "关于软件测试与软件开发的认识，不正确的是", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:A、软件生命周期各个阶段都可能产生错误", 
   "B:B、软件测试是独立于软件开发的一个工作", 
   "C:C、软件开发的需求分析和设计阶段就应开始测试工作", 
   "D:D、测试越早进行越有助于提高被测软件的质量"
  ]
 }, 
 {
  "A_CONTENT": "下面对软件测试的描述，错误的是", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:A、尽量避免测试地随意性", 
   "B:B、完全测试是不可能地，测试需要终止", 
   "C:C、对软件进行回归测试 ", 
   "D:D、测出缺陷就可以结束"
  ]
 }, 
 {
  "A_CONTENT": "使用以下（ ）不可以进行模糊查询", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:OR", 
   "B:Not between", 
   "C:Not IN", 
   "D:Like"
  ]
 }, 
 {
  "A_CONTENT": "某程序功能说明中列出“规定每个运动员参赛项目为1—3项”，应用黑盒法中的等价分类法确定等价类是（ ）", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:1<=项目数<=3", 
   "B:项目数<1", 
   "C:项目数>3", 
   "D:以上都是"
  ]
 }, 
 {
  "A_CONTENT": "关于软件测试下面说法不正确的是", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:A、所有软件测试都应追溯到用户需求", 
   "B:B、应尽早和不断的进行软件测试", 
   "C:C、为了证明软件正确性，尽可能多的开发测试用例", 
   "D:D、测试时应充分注意缺陷群集现象"
  ]
 }, 
 {
  "A_CONTENT": "\"下面说法中属于系统测试的目标的是（ ）1)找出软件中存在的缺陷与错误   2)确认软件所实现的功能是否符合规格说明   3)确认软件的性能是否满足要求\"", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:仅1)", 
   "B:1）和2）", 
   "C:2)和3)", 
   "D:1)、2）和3）"
  ]
 }, 
 {
  "A_CONTENT": "下面关于软件测试的说法，错误的是。", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:A、软件测试就是程序测试", 
   "B:B、软件测试贯穿于软件定义和开发的整个期间", 
   "C:C、需求规格说明、设计规格说明都是软件测试的对象", 
   "D:D、程序是软件测试的对象"
  ]
 }, 
 {
  "A_CONTENT": "单元测试中用来模拟实现被测模块需调用的其它功能模块是", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:A、驱动模块", 
   "B:B、桩模块", 
   "C:C、主控模块", 
   "D:D、真实的被调用模块"
  ]
 }, 
 {
  "A_CONTENT": "下面哪种测试用例设计方法既可以用于黑盒测试，也可以用于白盒测试。", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:A、边界值法", 
   "B:B、基本路径法", 
   "C:C、正交试验设计法", 
   "D:D、逻辑覆盖法"
  ]
 }, 
 {
  "A_CONTENT": "软件质量的定义是", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:A、软件的功能性、可靠性、易用性、效率、可维护性、可移植性", 
   "B:B、满足规定用户需求的能力", 
   "C:C、最大限度达到用户满意", 
   "D:D、软件特性的总和，以及满足规定和潜在用户需求的能力"
  ]
 }, 
 {
  "A_CONTENT": "有关评估系统效率，以下论述正确的是", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:A、响应时间越长，系统执行效率越高", 
   "B:B、系统的访问量越大，交易执行吞吐量越大", 
   "C:C、响应时间越短，交易执行吞吐量越大", 
   "D:D、响应时间和交易执行吞吐量都是用来衡量系统执行快慢的"
  ]
 }, 
 {
  "A_CONTENT": "软件测试管理包括测试过程管理、配置管理以及（ ）", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:测试评审管理", 
   "B:测试用例管理", 
   "C:测试计划管理", 
   "D:测试实施管理"
  ]
 }, 
 {
  "A_CONTENT": "两个小组独立地测试同一个程序，第一组发现25个错误，第二组发现30个错误，在两个小组发现的错误中有15个是共同的，那么可以估计程序中的错误总数是", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:A、25", 
   "B:B、30", 
   "C:C、50", 
   "D:D、60"
  ]
 }, 
 {
  "A_CONTENT": "在软件工程中，高质量的文档标准是完整性、一致性和（ ）", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:统一性", 
   "B:安全性", 
   "C:无二义性", 
   "D:组合性"
  ]
 }, 
 {
  "A_CONTENT": "为了提高测试的效率，应该（ ）", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:随机地选取测试数据", 
   "B:取一切可能的输入数据作为测试数据", 
   "C:在完成编码以后制定软件的测试计划", 
   "D:选择发现错误的可能性大的数据作为测试数据"
  ]
 }, 
 {
  "A_CONTENT": "重新启动Linux系统应使用（ ）命令实现", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:reboot", 
   "B:poweroff", 
   "C:init 0", 
   "D:restart"
  ]
 }, 
 {
  "A_CONTENT": "下面哪种测试不属于界面测试", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:A、窗口测试  ", 
   "B:B、文字测试     ", 
   "C:C、功能点测试  ", 
   "D:D、鼠标测试"
  ]
 }, 
 {
  "A_CONTENT": "测试设计员的职责有：（ ）", 
  "B_ANSWER": "B,C", 
  "C_OPTIONS": [
   "A:制定测试计划", 
   "B:设计测试用例", 
   "C:设计测试过程", 
   "D:评估测试活动"
  ]
 }, 
 {
  "A_CONTENT": "软件生存周期过程中，修改错误代价最大的阶段是（ ）", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:需求阶段", 
   "B:设计阶段", 
   "C:编程阶段", 
   "D:发布运行阶段"
  ]
 }, 
 {
  "A_CONTENT": "ls -a命令的作用是（ ）", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:显示所有配置文件", 
   "B:显示所有文件，包含以.开头的文件", 
   "C:显示以.开头的文件", 
   "D:显示以a开头的文件"
  ]
 }, 
 {
  "A_CONTENT": "下面关于测试计划的说法中，错误的是", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:A、包含测试范围", 
   "B:B、包含测试产出", 
   "C:C、包含测试实际结果", 
   "D:D、包含测试方法"
  ]
 }, 
 {
  "A_CONTENT": "关于软件测试对象的描述，下面不正确的是（ ）", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:软件测试不等于程序测试", 
   "B:软件测试就是源程序的测试", 
   "C:软件测试贯串于软件定义和开发的整个过程", 
   "D:软件开发过程中所产生的需求规格说明、概要设计规格说明、详细设计规格说明以及源程序都是软件测试的对象"
  ]
 }, 
 {
  "A_CONTENT": "在Linux下结束一个进程的命令是（ ）", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:ps", 
   "B:top", 
   "C:nice", 
   "D:kill"
  ]
 }
]