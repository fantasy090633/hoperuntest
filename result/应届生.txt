[
 {
  "A_CONTENT": "对于一个Java源文件，import, class定义以及package正确的顺序是", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:(A) package,import,class   ", 
   "B:(B) class,import,package", 
   "C:(C) import,package,class   ", 
   "D:(D) package,class,import"
  ]
 }, 
 {
  "A_CONTENT": "return语句", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:\"A．只能让方法返回数值　　　　\t\t\t\"", 
   "B:B．方法都必须含有", 
   "C:\"C．方法中可以有多句return 　　\t\t\t\"", 
   "D:D．不能用来返回对象"
  ]
 }, 
 {
  "A_CONTENT": "关于选择结构下列哪个说法正确", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:A．if语句和 else语句必须成对出现", 
   "B:B．if语句可以没有else语句对应", 
   "C:C．switch结构中每个case语句中必须用break语句", 
   "D:D．switch结构中必须有default语句"
  ]
 }, 
 {
  "A_CONTENT": "使用Java语言编写的源程序保存时的文件扩展名是", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:（A）.class    ", 
   "B:（B）.java  ", 
   "C:（C）.cpp      ", 
   "D:（D）.txt"
  ]
 }, 
 {
  "A_CONTENT": "如要抛出异常，应用下列哪种子句", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:A、catch", 
   "B:B、throws", 
   "C:C、try", 
   "D:D、finally"
  ]
 }, 
 {
  "A_CONTENT": "\"给出下列代码片段：if(x>0){System.out.println(\"\"\"first\"\"\");}else if(x>-3){ System.out.println(\"\"\"second\"\"\");}else {System.out.println(\"\"\"third\"\"\");}请问x处于什么范围时将打印字符串“second”?\"", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:A、x>0", 
   "B:B、x>-3", 
   "C:C、x<=-3", 
   "D:D、x<=0 &&x>-3"
  ]
 }, 
 {
  "A_CONTENT": "设 x = 1 , y = 2 , z = 3，则表达式  y＋＝z－－/＋＋x  的值是", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:A. 3                         ", 
   "B:B. 3. 5", 
   "C:C. 4                         ", 
   "D:D. 5"
  ]
 }, 
 {
  "A_CONTENT": "\"下列程序段的输出结果是void complicatedExpression(){int x=20, y=30;boolean b;b=x>50&&y>60||x>50&&y<-60||x<-50&&y>60||x<-50&&y<-60;System.out.println(b);}\"", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:A、true", 
   "B:B、false", 
   "C:C、1", 
   "D:D、0"
  ]
 }, 
 {
  "A_CONTENT": "关于继承的说法正确的是", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:A、子类将继承父类所有的属性和方法。", 
   "B:B、子类将继承父类的非私有属性和方法。", 
   "C:C、子类只继承父类public方法和属性", 
   "D:D、子类只继承父类的方法，而不继承属性"
  ]
 }, 
 {
  "A_CONTENT": "\"有以下程序片段，下列哪个选项不能插入到第1行1.2.public  class  Interesting{3.//do sth4. }\"", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:\"A、import java.awt.*;\t\t\"", 
   "B:B、package mypackage;", 
   "C:\"C、class OtherClass{   }\t\"", 
   "D:D、public class MyClass{ }"
  ]
 }, 
 {
  "A_CONTENT": "编译Java  Application 源程序文件将产生相应的字节码文件，这些字节码文件的扩展名为", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:A. .java                      ", 
   "B:B. .class", 
   "C:C. .html                      ", 
   "D:D. .exe"
  ]
 }, 
 {
  "A_CONTENT": "如果一个类的成员变量只能在所在类中使用，则该成员变量必须使用的修饰是", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:(A) public                 ", 
   "B:(B) protected", 
   "C:(C) private                ", 
   "D:(D) static"
  ]
 }, 
 {
  "A_CONTENT": "Java的字符类型采用的是Unicode编码方案，每个Unicode码占用____个比特位", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:A、8", 
   "B:B、16", 
   "C:C、32", 
   "D:D、64"
  ]
 }, 
 {
  "A_CONTENT": "如果需要从文件中读取数据，则可以在程序中创建哪一个类的对象", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:\"A、FileInputStream \t\t\t\"", 
   "B:B、FileOutputStream", 
   "C:\"C、DataOutputStream \t\t    \"", 
   "D:D、FileWriter"
  ]
 }, 
 {
  "A_CONTENT": "关于 for循环和 while循环的说法哪个正确", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:A．while循环先判断后执行，for循环先执行后判断。", 
   "B:B．while循环判断条件一般是程序结果，for循环的判断条件一般是非程序结果", 
   "C:C．两种循环任何时候都不可以替换", 
   "D:D．两种循环结构中都必须有循环体，循环体不能为空"
  ]
 }, 
 {
  "A_CONTENT": "void的含义", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:\"A．方法没有返回值　　　 \t\t\"", 
   "B:B． 方法体为空", 
   "C:\"C．没有意义　　　　    \t\t\"", 
   "D:D.　定义方法时必须使用"
  ]
 }, 
 {
  "A_CONTENT": "若要把变量声名为暂时性变量，应使用如下哪种修饰符", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:A、protected", 
   "B:B、provate", 
   "C:C、transient      ", 
   "D:D、volatile   "
  ]
 }, 
 {
  "A_CONTENT": "java.io包的File类是", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:(A)字符流类                ", 
   "B:(B) 字节流类", 
   "C:(C) 对象流类               ", 
   "D:(D) 非流类"
  ]
 }, 
 {
  "A_CONTENT": "如下哪个是Java中的标识符", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:A、fieldname    ", 
   "B:\"B、super\t\t\"", 
   "C:\"C、3number  \t\"", 
   "D:D、#number"
  ]
 }, 
 {
  "A_CONTENT": "关于抽象方法的说法正确的是", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:(A)可以有方法体            ", 
   "B:(B) 可以出现在非抽象类中", 
   "C:(C) 是没有方法体的方法     ", 
   "D:(D) 抽象类中的方法都是抽象方法"
  ]
 }, 
 {
  "A_CONTENT": "Frame对象默认的布局管理器是", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:\"A、FlowLayout\t\t\t\t\"", 
   "B:B、BorderLayout", 
   "C:\"C、CardLayout\t\t\t\t\"", 
   "D:D、null"
  ]
 }, 
 {
  "A_CONTENT": "为实现多线程之间的通信，需要使用下列哪种流才合适", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:A、Filter stream", 
   "B:B、File stream", 
   "C:C、Random access stream", 
   "D:D、Piped stream"
  ]
 }, 
 {
  "A_CONTENT": "\"下面程序段执行后b的值是Integer integ =new Integer(9)；boolean b = integ  instanceof  Object;\"", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:A) 9     ", 
   "B:B) true     ", 
   "C:C) 1     ", 
   "D:D) false"
  ]
 }, 
 {
  "A_CONTENT": "下列说法哪个正确", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:A、一个程序可以包含多个源文件", 
   "B:B、一个源文件中只能有一个类", 
   "C:C、一个源文件中可以有多个公共类", 
   "D:D、一个源文件只能供一个程序使用"
  ]
 }, 
 {
  "A_CONTENT": "this和super", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:A、都可以用在main()方法中", 
   "B:B、都是指一个内存地址", 
   "C:C、不能用在main()方法中", 
   "D:D、意义相同"
  ]
 }, 
 {
  "A_CONTENT": "若有定义：byte[] x={11,22,33,-66};其中0≤k≤3，则对x数组元素错误的引用是", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:A）x[5-3]", 
   "B:B）x[k]", 
   "C:C）x[k+5]", 
   "D:D）x[0]"
  ]
 }, 
 {
  "A_CONTENT": "下面关于main方法说明正确的是", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:(A) public main(String args[ ])", 
   "B:(B) public static void main(String args[ ])", 
   "C:(C) private static void main(String args[ ])", 
   "D:(D) void main()"
  ]
 }, 
 {
  "A_CONTENT": "在Java  Applet程序用户自定义的Applet子类中，一般需要重载父类的什么方法来完成一些画图操作", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:(A) start( )               ", 
   "B:(B) stop( )", 
   "C:(C) init( )                ", 
   "D:(D) paint( )"
  ]
 }, 
 {
  "A_CONTENT": "下列修饰符中与访问控制无关的是", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:\"A．private　　　  \t\t\t\t\t\"", 
   "B:B．public", 
   "C:\"C．protected\t\t\t\t\t\t\"", 
   "D:D．final"
  ]
 }, 
 {
  "A_CONTENT": "\"设有下面两个赋值语句：a = Integer.parseInt(“12”);b = Integer.valueOf(“12”).intValue();下述说法正确的是\"", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:A、a是整数类型变量，b是整数类对象。", 
   "B:B、a是整数类对象，b是整数类型变量。", 
   "C:\"C、a和b都是整数类对象并且值相等。\t\"", 
   "D:D、a和b都是整数类型变量并且值相等。"
  ]
 }, 
 {
  "A_CONTENT": "注释的基本原则不包括", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:A、注释应该增加代码的清晰度", 
   "B:B、注释要简洁", 
   "C:C、在写代码之前写注释", 
   "D:D、尽量给每一条语句加注释"
  ]
 }, 
 {
  "A_CONTENT": "下列程序段执行后的结果是String s = new String(\"\"\"abcdefg\"\"\");for (int i=0; i<s.length(); i+=2){System.out.print(s.charAt(i));}", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:A) aceg   ", 
   "B:B) B) ACEG    ", 
   "C:C) C) abcdefg    ", 
   "D:D) D) abcd"
  ]
 }, 
 {
  "A_CONTENT": "在浏览器中执行applet 程序，以下选项中的哪个方法将被最先执行", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:\"A、init()\t\"", 
   "B:\"B、start()   \t\"", 
   "C:\"C、destroy()   \t\"", 
   "D:D、stop()"
  ]
 }, 
 {
  "A_CONTENT": "在类的定义中构造函数的作用是", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:（A）保护成员变量    ", 
   "B:（B）读取类的成员变量", 
   "C:（C）描述类的特征    ", 
   "D:（D）初始化成员变量"
  ]
 }, 
 {
  "A_CONTENT": "在编写Java  Applet程序时，需在程序的开头写上什么语句", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:\"A、import  java.awt.* ;       \t\"", 
   "B:B、import  java.applet.Applet ;", 
   "C:\"C、import  java.io.* ;         \t\"", 
   "D:D、import  java.awt.Graphics ;"
  ]
 }, 
 {
  "A_CONTENT": "在Java中，一个类可同时定义许多同名的方法，这些方法的形式参数的个数、类型或顺序各不相同，传回的值也可以不相同。这种面向对象程序特性称为", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:A） 隐藏", 
   "B:B） 重写", 
   "C:C） 重载", 
   "D:D） Java不支持此特性"
  ]
 }, 
 {
  "A_CONTENT": "覆盖与重载的关系是", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:A、覆盖只有发生在父类与子类之间，而重载可以发生在同一个类中", 
   "B:B．覆盖方法可以不同名，而重载方法必须同名", 
   "C:C．final修饰的方法可以被覆盖，但不能被重载", 
   "D:D．覆盖与重载是同一回事"
  ]
 }, 
 {
  "A_CONTENT": "\"下面的代码段执行之后count的值是什么int count = 1;for (int i = 1; i <= 5; i++) {count += i;}System.out.println(count);\"", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:\"A、5\t\t \"", 
   "B:\"B、1\t\t\t\"", 
   "C:\"C、15  \t\t\"", 
   "D:D、16"
  ]
 }, 
 {
  "A_CONTENT": "当点击鼠标或者拖动鼠标时，触发的事件是下列的哪一个", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:A）KeyEvent  ", 
   "B:B）ActionEvent   ", 
   "C:C）ItemEvent   ", 
   "D:D）MouseEvent"
  ]
 }, 
 {
  "A_CONTENT": "设int a=-2，则表达式a>>>3的值为", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:（A）0        ", 
   "B:（B）3       ", 
   "C:（C）8    ", 
   "D:（D）-1"
  ]
 }, 
 {
  "A_CONTENT": "为了使包ch4在当前程序中可见，可以使用的语句是", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:A）import ch4.*;    ", 
   "B:B）package ch4.*;", 
   "C:C）ch4 import;      ", 
   "D:D）ch4 package;"
  ]
 }, 
 {
  "A_CONTENT": "在面向对象的方法中，一个对象请求另一个对象为其服务的方式是通过发送", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:A、调用语句", 
   "B:B、命令", 
   "C:C、口令", 
   "D:D、消息"
  ]
 }, 
 {
  "A_CONTENT": "对于已经被定义过可能抛出异常的语句，在编程时", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:A、必须使用try／catch语句处理异常，或用throws将其抛出", 
   "B:B．如果程序错误，必须使用 try／catch语句处理异常", 
   "C:C．可以置之不理", 
   "D:D．只能使用try／catch语句处理"
  ]
 }, 
 {
  "A_CONTENT": "下列类定义中哪些是合法的抽象类的定义", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:A、abstract Animal{abstract void growl();}", 
   "B:B、class abstract Animal{abstract void growl();}", 
   "C:C、abstract class Animal{abstract void growl();}", 
   "D:D、abstract class Animal{abstract void growl(){System.out.println(“growl”);};}"
  ]
 }, 
 {
  "A_CONTENT": "ava源文件和编译后的文件扩展名分别为", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:(A) .class和  .java            ", 
   "B:(B).java和 .class", 
   "C:(C).class和  .class            ", 
   "D:(D) .java和  .java"
  ]
 }, 
 {
  "A_CONTENT": "关于对象成员占用内存的说法哪个正确", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:A．同一个类的对象共用同一段内存", 
   "B:B、同一个类的对象使用不同的内存段，但静态成员共享相同的内存空间", 
   "C:C．对象的方法不占用内存", 
   "D:D．以上都不对"
  ]
 }, 
 {
  "A_CONTENT": "进行Java基本的GUI设计需要用到的包是", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:A）java.io   ", 
   "B:\"B）java.sql\t   \"", 
   "C:C）java.awt   ", 
   "D:D）java.rmi"
  ]
 }, 
 {
  "A_CONTENT": "Java语言使用的字符码集是", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:(A) ASCII                 ", 
   "B:(B) BCD", 
   "C:(C) DCB                  ", 
   "D:(D) Unicode"
  ]
 }, 
 {
  "A_CONTENT": "以下有关构造方法的说法，正确的是", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:A． 一个类的构造方法可以有多个", 
   "B:B． 构造方法在类定义时被调用", 
   "C:C． 构造方法只能由对象中的其它方法调用。", 
   "D:D． 构造方法可以和类同名，也可以和类名不同"
  ]
 }, 
 {
  "A_CONTENT": "在类的定义中可以有两个同名函数，这种现象称为函数", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:（A）封装            ", 
   "B:（B）继承", 
   "C:（C）覆盖            ", 
   "D:（D）重载"
  ]
 }, 
 {
  "A_CONTENT": "关于super的说法正确的是", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:A、是指当前对象的内存地址", 
   "B:B、是指当前对象的父类对象的内存地址", 
   "C:C、是指当前对象的父类", 
   "D:D、可以用在main()方法中"
  ]
 }, 
 {
  "A_CONTENT": "为读取的内容进行处理后再输出，需要使用下列哪种流", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:A、File stream", 
   "B:B、Pipe stream", 
   "C:C、Random stream", 
   "D:D、Filter stream"
  ]
 }, 
 {
  "A_CONTENT": "抽象方法", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:A、可以有方法体", 
   "B:B、可以出现在非抽象类中", 
   "C:C、是没有方法体的方法", 
   "D:D、抽象类中的方法都是抽象方法"
  ]
 }, 
 {
  "A_CONTENT": "设有数组的定义int[] a = new int[3]，则下面对数组元素的引用错误的是", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:（A）a[0];           ", 
   "B:（B）a[a.length-1];", 
   "C:（C）a[3];           ", 
   "D:（D）int i=1； a[i];"
  ]
 }, 
 {
  "A_CONTENT": "类与对象的关系是", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:（A）类是对象的抽象   ", 
   "B:（B）对象是类的抽象", 
   "C:（C）对象是类的子类   ", 
   "D:（D）类是对象的具体实例"
  ]
 }, 
 {
  "A_CONTENT": "java.io包中定义了多个流类型来实现输入和输出功能，可以从不同的角度对其进行分类按功能分为", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:A、输入流和输出流   ", 
   "B:B、字节流和字符流   ", 
   "C:C、节点流和处理流   ", 
   "D:D、简单流和复杂流"
  ]
 }, 
 {
  "A_CONTENT": "下面哪个是非法的", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:(A) int I = 32;            ", 
   "B:(B) float f = 45.0;", 
   "C:(C) double d = 45.0;       ", 
   "D:(D) char c = ‘u’;　"
  ]
 }, 
 {
  "A_CONTENT": "\"下列代码的输出结果是class   Parent{   void printMe() {   System.out.println(\"\"\"parent\"\"\");   }}；class Child extends Parent {   void printMe() {       System.out.println(\"\"\"child\"\"\");   }   void printall() {       super.printMe();       this.printMe();       printMe();   }}public class Test_this {public static void main(String args[]) {   Child myC=new Child();   myC.printall();  }}\"", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:\"A、parent   child   child\"", 
   "B:\"B、parent   child   parent\"", 
   "C:\"C、parent   child\"", 
   "D:D、编译错误"
  ]
 }, 
 {
  "A_CONTENT": "关于构造函数的说法哪个正确", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:A、一个类只能有一个构造函数", 
   "B:B、一个类可以有多个不同名的构造函数", 
   "C:C、构造函数与类同名", 
   "D:D、构造函数必须自己定义，不能使用父类的构造函数"
  ]
 }, 
 {
  "A_CONTENT": "下列流中哪个不属于字节流", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:A．FileInputStream", 
   "B:B．BufferedInputStream", 
   "C:C. FilterInputStream", 
   "D:D. InputStreamReader"
  ]
 }, 
 {
  "A_CONTENT": "\"下面的程序创建了一个文件输出流对象，用来向文件test.txt中输出数据，假设程序当前目录下不存在文件test.txt，编译下面的程序Test.java后，将该程序运行3次，则文件test.txt 的内容是import java.io.*;public class Test {public static void main(String args[]) {try {String s=\"\"\"ABCDE\"\"\";byte b[]=s.getBytes();FileOutputStream file=new FileOutputStream(\"\"\"test.txt\"\"\",true);file.write(b);file.close();}catch(IOException e) {System.out.println(e.toString());}}}\"", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:A) ABCABC   ", 
   "B:B) B) ABCDE     ", 
   "C:C) C) Test    ", 
   "D:D) D) ABCDE ABCDE ABCDE"
  ]
 }, 
 {
  "A_CONTENT": "Swing与aWT的区别不包括 ", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:A、Swing是由纯Java实现的轻量级构件", 
   "B:B、Swing没有本地代码", 
   "C:C、Swing不依赖操作系统的支持", 
   "D:D、Swing支持图形用户界面"
  ]
 }, 
 {
  "A_CONTENT": "编写和运行Java applet程序与编写和运行Java application程序不同的步骤是", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:A、编写源代码", 
   "B:B、编写HTML文件调用该小程序，以.html为扩展名存入相同文件夹", 
   "C:C、编译过程", 
   "D:D、解释执行"
  ]
 }, 
 {
  "A_CONTENT": "哪个关键字可以对对象加互斥锁？", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:(A) transient              ", 
   "B:(B) synchronized", 
   "C:(C) serialize              ", 
   "D:(D) static"
  ]
 }, 
 {
  "A_CONTENT": "在使用interface声明一个接口时，只可以使用____修饰符修饰该接口", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:A、private", 
   "B:B、protected", 
   "C:C、private protected", 
   "D:D、public"
  ]
 }, 
 {
  "A_CONTENT": "为AB类的一个无形式参数无返回值的方法method书写方法头，使得使用类名AB作为前缀就可以调用它，该方法头的形式为", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:A. static void method( )                    ", 
   "B:B. public void method( )", 
   "C:C. final void method( )                     ", 
   "D:D. abstract void method( )"
  ]
 }, 
 {
  "A_CONTENT": "下面哪一个是Java中不合法的标识符", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:（A）$persons          ", 
   "B:（B）twoNum", 
   "C:（C）_myVar           ", 
   "D:（D）*point"
  ]
 }, 
 {
  "A_CONTENT": "为AB类的一个无形式参数无返回值的方法method书写方法头，使得使用类名AB作为前缀就可以调用它，该方法头的形式为", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:（A）static  void  method( )", 
   "B:（B）public  void  method( )", 
   "C:（C）final  void  method( )", 
   "D:（D）abstract  void  method( )"
  ]
 }, 
 {
  "A_CONTENT": "下面关键字中，哪一个不是用于异常处理语句", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:（A）try             ", 
   "B:（B）break", 
   "C:（C）catch           ", 
   "D:（D）finally"
  ]
 }, 
 {
  "A_CONTENT": "以下关于继承的叙述正确的是", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:A、在Java中类只允许单一继承", 
   "B:B、在Java中一个类只能实现一个接口", 
   "C:C、在Java中一个类不能同时继承一个类和实现一个接口", 
   "D:D、在Java中接口只允许单一继承"
  ]
 }, 
 {
  "A_CONTENT": "在Java中，一个类可同时定义许多同名的方法，这些方法的形式参数的个数、类型或顺序各不相同，传回的值也可以不相同，这种面向对象程序特性称为", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:A、隐藏", 
   "B:B、覆盖", 
   "C:C、重载", 
   "D:D、Java不支持此特性"
  ]
 }, 
 {
  "A_CONTENT": "Java语言具有许多优点和特点,下列选项中,哪个反映了Java程序并行机制的特点", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:A、安全性", 
   "B:B、多线程", 
   "C:C、跨平台", 
   "D:D、可移值"
  ]
 }, 
 {
  "A_CONTENT": "\"关于下列程序段的输出结果，说法正确的是public class MyClass{static int i;public static void main(String argv[]){System.out.println(i);}}\"", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:A、有错误，变量i没有初始化。", 
   "B:B、null", 
   "C:C、1", 
   "D:D、0"
  ]
 }, 
 {
  "A_CONTENT": "\"给出下面代码，关于该程序以下哪个说法是正确的public class Person{static int arr[] = new int[5];public static void main(String a[]){System.out.println(arr[0]);　}}\"", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:\"A、编译时将产生错误\t\t\"", 
   "B:B、B、编译时正确，运行时将产生错误", 
   "C:\"C、输出零\t\t        \"", 
   "D:D、输出空"
  ]
 }, 
 {
  "A_CONTENT": "下列说法哪个正确", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:A．不需要定义类，就能创建对象", 
   "B:B．对象中必须有属性和方法", 
   "C:C．属性可以是简单变量，也可以是一个对象", 
   "D:D、属性必须是简单变量"
  ]
 }, 
 {
  "A_CONTENT": "如果容器组件p的布局是BorderLayout，则在p的下边中添加一个按钮b，应该使用的语句是", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:\"A、p.add(b);\t\t\t\t\t\"", 
   "B:B、p.add(b,\"North\");", 
   "C:\"C、p.add(b,\"\"\"South\"\"\");"
  ]
 }, 
 {
  "A_CONTENT": "下列哪一项不属于Swing的顶层容器", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:A）JApplet  ", 
   "B:\"B）JTree\t \"", 
   "C:C）JDialog  ", 
   "D:D）JFrame"
  ]
 }, 
 {
  "A_CONTENT": "在编写Java applet程序时，若需要对发生事件作出响应和处理，一般需要在程序的开头写上____语句", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:A、import java.awt.*;", 
   "B:B、import java.applet.*;", 
   "C:C、import java.io.*;", 
   "D:D、import java.awt.event.*;"
  ]
 }, 
 {
  "A_CONTENT": "\"下列代码的执行结果是public class Test3{public static void main(String args[]){System.out.print(100%3);System.out.print(\"\"\",\"\"\");System.out.println(100%3.0);}}\"", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:A、1,1", 
   "B:B、1,1.0", 
   "C:C、1.0,1", 
   "D:D、1.0,1.0"
  ]
 }, 
 {
  "A_CONTENT": "异常包含下列哪些内容", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:A．程序执行过程中遇到的事先没有预料到的情况", 
   "B:B．程序中的语法错误", 
   "C:C．程序的编译错误", 
   "D:D．以上都是"
  ]
 }, 
 {
  "A_CONTENT": "paint()方法使用哪种类型的参数", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:\"A、Graphics \t\"", 
   "B:\"B、Graphics2D \t\"", 
   "C:\"C、String \t\"", 
   "D:D、Color"
  ]
 }, 
 {
  "A_CONTENT": "字符流与字节流的区别在于", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:A．前者带有缓冲，后者没有", 
   "B:B．前者是块读写，后者是字节读写", 
   "C:C. 二者没有区别，可以互换使用", 
   "D:D. 每次读写的字节数不同"
  ]
 }, 
 {
  "A_CONTENT": "设 x = 1 , y = 2 , z = 3，则表达式  y＋＝z－－/＋＋x  的值是", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:A. 3          ", 
   "B:B. 3. 5        ", 
   "C:C. 4         ", 
   "D:D. 5"
  ]
 }, 
 {
  "A_CONTENT": "请问所有的异常类皆继承哪一个类", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:\"A）java.io.Exception\t  \"", 
   "B:B）java.lang.Throwable", 
   "C:C）java.lang.Exception   ", 
   "D:D）java.lang.Error"
  ]
 }, 
 {
  "A_CONTENT": "Java application中的主类需包含main方法，以下哪项是main方法的正确形式", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:\"A、\tString  args\t\"", 
   "B:\"B、String  args[]\t\"", 
   "C:\"C、Char  arg\t\t\"", 
   "D:D、StringBuffer args[]"
  ]
 }, 
 {
  "A_CONTENT": "以下代码段执行后的输出结果为", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:\"A、-1\t\"", 
   "B:\"B、2\t\"", 
   "C:\"C、1\t\t\"", 
   "D:D、3"
  ]
 }, 
 {
  "A_CONTENT": "不允许作为类及类成员的访问控制符的是", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:A. public                    ", 
   "B:B. private", 
   "C:C. static                     ", 
   "D:D. protected"
  ]
 }, 
 {
  "A_CONTENT": "欲构造ArrayList类的一个实例，此类继承了List接口，下列哪个方法是正确的", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:（A）ArrayList myList=new Object( )", 
   "B:（B）List myList=new ArrayList( )", 
   "C:（C）ArrayList myList=new List( )", 
   "D:（D）List myList=new List( )"
  ]
 }, 
 {
  "A_CONTENT": "关于方法main（）的说法哪个正确", 
  "B_ANSWER": "C", 
  "C_OPTIONS": [
   "A:A．方法main（）只能放在公共类中", 
   "B:B  main()的头定义可以根据情况任意更改", 
   "C:C．一个类中可以没有main()方法", 
   "D:D．所有对象的创建都必须放在main()方法中"
  ]
 }, 
 {
  "A_CONTENT": "构造函数何时被调用", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:\"A、创建对象时　　　　　\t\t\t\"", 
   "B:B、类定义时", 
   "C:\"C、使用对象的方法时　　\t\t\t\"", 
   "D:D、使用对象的属性时"
  ]
 }, 
 {
  "A_CONTENT": "下面哪一个import命令可以为我们提供编写网络应用程序的类", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:\"A、import java.sql.*;\t\t\t\"", 
   "B:B、import java.util.*;", 
   "C:\"C、import java.io.*;\t\t\t\"", 
   "D:D、import java.net.*;"
  ]
 }, 
 {
  "A_CONTENT": "while循环和 do…while循环的区别是", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:A．没有区别，这两个结构任何情况下效果一样", 
   "B:B．while循环比 do…while循环执行效率高", 
   "C:C．while循环是先循环后判断，所以循环体至少被执行一次", 
   "D:D．do…while循环是先循环后判断，所以循环体至少被执行一次"
  ]
 }, 
 {
  "A_CONTENT": "关于接口哪个正确", 
  "B_ANSWER": "A", 
  "C_OPTIONS": [
   "A:A、实现一个接口必须实现接口的所有方法", 
   "B:B．一个类只能实现一个接口", 
   "C:C．接口间不能有继承关系", 
   "D:D．接口和抽象类是同一回事"
  ]
 }, 
 {
  "A_CONTENT": "以下哪个不是Java的原始数据类型", 
  "B_ANSWER": "B", 
  "C_OPTIONS": [
   "A:\"A、int\t\"", 
   "B:\"B、Boolean\t\"", 
   "C:\"C、float\t\"", 
   "D:D、char"
  ]
 }, 
 {
  "A_CONTENT": "\"有以下方法的定义，请选择该方法的返回类型ReturnType  method(byte x, double y){return  (short)x/y*2;}\"", 
  "B_ANSWER": "D", 
  "C_OPTIONS": [
   "A:\"A、byte\t\"", 
   "B:\"B、B、short\t\"", 
   "C:\"C、C、int\t\"", 
   "D:D、D、double"
  ]
 }
]